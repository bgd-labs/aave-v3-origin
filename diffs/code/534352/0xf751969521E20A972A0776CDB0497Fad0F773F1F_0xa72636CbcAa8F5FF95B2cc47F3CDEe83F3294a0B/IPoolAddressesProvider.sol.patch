===================================================================
--- src/contracts/interfaces/IPoolAddressesProvider.sol
+++ @aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol
@@ -1,12 +1,12 @@
-// SPDX-License-Identifier: MIT
-pragma solidity ^0.8.0;
+// SPDX-License-Identifier: AGPL-3.0
+pragma solidity 0.8.10;
 
 /**
  * @title IPoolAddressesProvider
  * @author Aave
  * @notice Defines the basic interface for a Pool Addresses Provider.
- */
+ **/
 interface IPoolAddressesProvider {
     /**
      * @dev Emitted when the market identifier is updated.
      * @param oldMarketId The old id of the market
@@ -121,9 +121,9 @@
 
     /**
      * @notice Returns the id of the Aave market to which this contract points to.
      * @return The market id
-     */
+     **/
     function getMarketId() external view returns (string memory);
 
     /**
      * @notice Associates an id with a specific PoolAddressesProvider.
@@ -166,29 +166,29 @@
 
     /**
      * @notice Returns the address of the Pool proxy.
      * @return The Pool proxy address
-     */
+     **/
     function getPool() external view returns (address);
 
     /**
      * @notice Updates the implementation of the Pool, or creates a proxy
      * setting the new `pool` implementation when the function is called for the first time.
      * @param newPoolImpl The new Pool implementation
-     */
+     **/
     function setPoolImpl(address newPoolImpl) external;
 
     /**
      * @notice Returns the address of the PoolConfigurator proxy.
      * @return The PoolConfigurator proxy address
-     */
+     **/
     function getPoolConfigurator() external view returns (address);
 
     /**
      * @notice Updates the implementation of the PoolConfigurator, or creates a proxy
      * setting the new `PoolConfigurator` implementation when the function is called for the first time.
      * @param newPoolConfiguratorImpl The new PoolConfigurator implementation
-     */
+     **/
     function setPoolConfiguratorImpl(address newPoolConfiguratorImpl) external;
 
     /**
      * @notice Returns the address of the price oracle.
@@ -210,9 +210,9 @@
 
     /**
      * @notice Updates the address of the ACL manager.
      * @param newAclManager The address of the new ACLManager
-     */
+     **/
     function setACLManager(address newAclManager) external;
 
     /**
      * @notice Returns the address of the ACL admin.
@@ -234,9 +234,9 @@
 
     /**
      * @notice Updates the address of the price oracle sentinel.
      * @param newPriceOracleSentinel The address of the new PriceOracleSentinel
-     */
+     **/
     function setPriceOracleSentinel(address newPriceOracleSentinel) external;
 
     /**
      * @notice Returns the address of the data provider.
@@ -246,7 +246,7 @@
 
     /**
      * @notice Updates the address of the data provider.
      * @param newDataProvider The address of the new DataProvider
-     */
+     **/
     function setPoolDataProvider(address newDataProvider) external;
 }
