===================================================================
--- src/contracts/protocol/configuration/PoolAddressesProviderRegistry.sol
+++ @aave/core-v3/contracts/protocol/configuration/PoolAddressesProviderRegistry.sol
@@ -1,6 +1,6 @@
 // SPDX-License-Identifier: BUSL-1.1
-pragma solidity ^0.8.10;
+pragma solidity 0.8.10;
 
 import {Ownable} from "../../dependencies/openzeppelin/contracts/Ownable.sol";
 import {Errors} from "../libraries/helpers/Errors.sol";
 import {IPoolAddressesProviderRegistry} from "../../interfaces/IPoolAddressesProviderRegistry.sol";
@@ -10,9 +10,9 @@
  * @author Aave
  * @notice Main registry of PoolAddressesProvider of Aave markets.
  * @dev Used for indexing purposes of Aave protocol's markets. The id assigned to a PoolAddressesProvider refers to the
  * market it is connected with, for example with `1` for the Aave main market and `2` for the next created.
- */
+ **/
 contract PoolAddressesProviderRegistry is
     Ownable,
     IPoolAddressesProviderRegistry
 {
@@ -47,15 +47,16 @@
     function registerAddressesProvider(
         address provider,
         uint256 id
     ) external override onlyOwner {
+        require(id != 0, Errors.INVALID_ADDRESSES_PROVIDER_ID);
         require(
-            id != 0 && _idToAddressesProvider[id] == address(0),
-            Errors.InvalidAddressesProviderId()
+            _idToAddressesProvider[id] == address(0),
+            Errors.INVALID_ADDRESSES_PROVIDER_ID
         );
         require(
             _addressesProviderToId[provider] == 0,
-            Errors.AddressesProviderAlreadyAdded()
+            Errors.ADDRESSES_PROVIDER_ALREADY_ADDED
         );
 
         _addressesProviderToId[provider] = id;
         _idToAddressesProvider[id] = provider;
@@ -69,9 +70,9 @@
         address provider
     ) external override onlyOwner {
         require(
             _addressesProviderToId[provider] != 0,
-            Errors.AddressesProviderNotRegistered()
+            Errors.ADDRESSES_PROVIDER_NOT_REGISTERED
         );
         uint256 oldId = _addressesProviderToId[provider];
         _idToAddressesProvider[oldId] = address(0);
         _addressesProviderToId[provider] = 0;
